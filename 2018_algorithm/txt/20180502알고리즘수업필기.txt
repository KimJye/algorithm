2018.05.02 알고리즘 수업 필기

<레드블랙트리>

- binaryTree의 단점 : 최악의 경우 => 정렬된 순서로 삽입하는 경우

- 이 최악의 경우를 제거한 binary tree 알고리즘
	AVL Tree => root로부터 leaf까지 경로가 모두 거의 동일함(1차이). 균형 맞추기 위해 시간이 좀 더 걸린다.
	Read Black Tree => root로부터 leaf까지 경로가 최대 2배 차이 미만. 균형 맞추는 시간은 좀 짧지만 탐색할때 오래걸린다. 현실적으로는 레드블랙트리를 더 많이 쓴다.

- 레드블랙트리는 2배 미만 차이 경로로 균형을 맞춘다.

- 블랙노드: 균형 맞은 노드, 레드 노드: 균형 모르는 노드

- 레드노드의 숫자를 제한규칙: 레드 노드는 연속으로 나오면 안된다. 루트와 리프는 블랙이어야 한다.

- 레드블랙트리와 바이너리 트리 비교에서 레드블랙트리의 장점은 균형 있어서 최악의 경우에도 성능이 logn으로 보장된다. 하지만 이진트리는 최악의 경우가 길이의 비례하기 때문에 링크드 리스트의 시간복잡도와 같다.

- 레드블랙 트리는 null을 무조건 노드로 취급한다.