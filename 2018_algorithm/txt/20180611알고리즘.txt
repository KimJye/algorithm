20180611알고리즘 수업필기
<행렬 곱셈>
재귀적 해법
3,10,7
6,8,5
9,4,2
구하려고 하는 것 = 경로 점수(출발지점에서 도착지점까지)(2,2)
	둘 중 최솟값 : 경로점수(1,2)+칸점수(2,2)
		      경로점수(2,1)+칸점수(2,2)

구하려고 하는 것 = 경로 점수(출발지점에서 도착지점까지)(r,c)
	둘 중 최솟값 : 경로점수(r-1,c)+칸점수(r,c)
		      경로점수(r,c-1)+칸점수(r,c)

(M1 M2 M3 M4)
(2,5) (5,3) (3,8) (8,3)
0    1     2	     3    =>인덱스
((m1 m2)m3)m4  	
(m1 m2) (m3 m4)	
(m1(m2 m3))m4
m1 ((m2 m3) m4)
m1(m2(m3 m4))
(m1 m2) (m3 m4)

=> 곱셈 경우의 수 = 점수라고 한다.

배열 a가 있다고 하면 점수(a, start, end)

점수 (a,0,3)
  점수 (a,0,2) 재귀호출78
+    점수(a,3,3) if문 return 0
+ (결과 행렬 곱하기)곱셈 점수 (0) 48+ 78 = 126

점수(a,0,2)
  점수(a,0,1) 이건 모르니까 재귀호출 점수 30
+ 점수(a,2,2) 행렬하나니까 return 0 
+(결과 행렬 곱하기)곱셈 점수 = 48+30 = 78

점수 (a,0,1)
  점수(a,0,0) 점수가 0
+ 점수(a,1,1) 점수가 0
+(결과 행렬 곱하기)곱셈 점수 = 30

종료 조건 : 곱할 행렬의 수가 1이면 return 0		

==> merge sort, quick sort 구조와 비슷함. 
차이점은 최소값 찾는 것으로 middle이 계속 바뀜

이전 단계 : middle값을 정하고 자름
현 단계 : start에서 middle+1까지의 점수, 곱셈 점수 구하기


<그래프 알고리즘>
트리와 그래프의 공통점 : 정점과 간선으로 이루어져있다.
차이점 : 트리는 단방향이고 다른 노드로 가는 경로는 딱 하나뿐이다.
            그래프는 경로가 하나가 아닌경우고 싸이클이 있다.