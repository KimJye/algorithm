20180321 알고리즘 <3.기초적인 정렬-Person>

void bubbleSort(String[]a)-String 배열만 다루겟다

void bubbleSort(Comparable[] a)->bubblesort에서는 comparable 인터페이스와 메소드를 써야하기 때문에 이게 바람직하다. 

void bubbleSort(Object[] a)-객체 배열을 다루겟다. -> 하지만 Object 클래스의 메소드가 많지가 않아서 바람직하지 않다.


*Object 클래스의 메소드
->ex) boolean contains(Object[]a, Object value){//value값이 배열 a에 있는지 유무 판단
	if(a==null) return false;
	if(value==null){
		for(int i=0;i<a.length;++i)
			if(a[i]==null) return true;
	}else{
		for(int i=0;i<a.length;++i)
			if(value.equals(a[i]) return true;
	}
	return false;
}

* comparable 인터페이스 말고 comparator 인터페이스가 있는데 comparator 인터페이스로 하려면 void bubbleSort(Object[]a, Comparator comparator)

<3)알고리즘 구상 훈련>
입력: 정수 배열

출력: 짝수들이 배열의 앞부분에, 홀수들은 배열의 뒷부분에 위치해야 함.

--->
	  start인덱스 짝수면 무시 홀수찾을때까지 
	end인덱스 홀수면 무시 짝수 찾을때까지 
	start가 홀수 찾고 end가 짝수 찾으면  swap 한다.
	만나기 전까지 start인덱스가 end인덱스전까지 반복한다.


* 기본자료형은 부모자식개념이 없음.
* equlas 메소드는 object 클래스에 있는데 compartor은 object에 없을까?
-> 모든 클래스에 대해서 equals는 구현할 수 있는데 compartor은 구현할 수 없는 경우가 있다.
두 객체 멤버변수가 같다틀리다는 비교할 수있는데 뭐가 큰지 작은지 비교하기 애매한 경우가 있기 떄문이다.
compare는 구현못하는 클래스가 꽤 많다. 따라서 필수가 아니라 옵션이기 떄문에 Object클래스에 선언을 안하고 Comparable인터페이스를 implements해서 구현해라.

* 기본자료형 int 가 있는데 클래서 Intger 클래스가 있는 이유
-> 숫자를 객체형으로 다룰때 편리한 경우가 있기 때문이다.-> 어디에 넣어둘때 편리하다->부모클래스타입으로 한번에 구현하면되니까.

   기본자료형으로 다룰때 편리한 경우는 계산할 때이다.


<03-2 고급 정렬>

* 인터페이스->다형성

* void sort(int[]a,int 시작인덱스(start),int 끝인덱스(end))
1. 현재 단계 작업 구현
	int middle=(start+end)/2;
	//재귀호출후
	merge(a, start, middle, end);
2. 다음 단계 작업 재귀호출
	sort(a, start, middle);
	sort(a, middle+1, end);
3. 종료 조건
	if(start>=end) return;
	
